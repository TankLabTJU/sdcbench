<<<<<<< HEAD
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: sdc-mongo
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  namespace: sdc-mongo
  labels:
    name: mongo
spec:
  selector:
    role: mongo
  type: NodePort
  ports:
  - name: client
    port: 27017
    nodePort: 30004
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: sdc-mongo
spec:
  selector:
    matchLabels:
      role: mongo 
  serviceName: "mongo"
  replicas: 3
  template:
    metadata:
      labels:
        role: mongo
        environment: prod
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: sdcbench/mongo:3.4.22 #mongo:3.4.22
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip"
            - 0.0.0.0
            - "--smallfiles"
            - "--noprealloc"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: sdcbench/mongo-k8s-sidecar:latest # cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=prod"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-storage
      resources:
        requests:
=======
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: sdc-mongo
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  namespace: sdc-mongo
  labels:
    name: mongo
spec:
  selector:
    role: mongo
  type: NodePort
  ports:
  - name: client
    port: 27017
    nodePort: 30004
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: sdc-mongo
spec:
  selector:
    matchLabels:
      role: mongo 
  serviceName: "mongo"
  replicas: 3
  template:
    metadata:
      labels:
        role: mongo
        environment: prod
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongo
          image: sdcbench/mongo:3.4.22 #mongo:3.4.22
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip"
            - 0.0.0.0
            - "--smallfiles"
            - "--noprealloc"
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: sdcbench/mongo-k8s-sidecar:latest # cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongo,environment=prod"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-storage
      resources:
        requests:
>>>>>>> ssd model
          storage: 3Gi